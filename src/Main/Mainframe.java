package Main;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class Mainframe {
    private JPanel panel1;
    private JPanel panel2;
    private JButton button1;

    public Mainframe() {
        $$$setupUI$$$();
    }

    public static void Run(String[] args) {
        JFrame frame = new JFrame("Icefield");
        frame.setContentPane(new Mainframe().panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
        frame.setResizable(false);
        //opens in the center of the monitor
        frame.setLocationRelativeTo(null);
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setPreferredSize(new Dimension(1000, 700));
        panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel2.setBackground(new Color(-1));
        panel2.setPreferredSize(new Dimension(1000, 700));
        panel1.add(panel2, BorderLayout.CENTER);
        panel2.setBorder(BorderFactory.createTitledBorder(null, "Graph algorithms", TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$("JetBrains Mono", Font.ITALIC, 28, panel2.getFont()), new Color(-16777216)));
        button1 = new JButton();
        button1.setText("Button");
        panel2.add(button1, BorderLayout.WEST);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
